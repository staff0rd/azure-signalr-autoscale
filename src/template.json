{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "signalrName": {
            "type": "string"
        },
        "rest-authentication": {
            "type": "object",
            "defaultValue": {
                "audience": "https://management.azure.com/",
                "clientId": "<yourServicePrincipalClientId>",
                "secret": "<yourServicePrincipalSecret>",
                "tenant": "<yourActiveDirectoryTenant>",
                "type": "ActiveDirectoryOAuth"
            }
        },
        "logicAppName": {
            "defaultValue": "autoscale-signalr-service",
            "type": "string"
        },
        "scaleInterval": {
            "type": "int",
            "defaultValue": 15
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "location": {
                            "defaultValue": "[resourceGroup().location]",
                            "type": "String"
                        },
                        "resourceGroup": {
                            "defaultValue": "[resourceGroup().name]",
                            "type": "String"
                        },
                        "signalrName": {
                            "defaultValue": "[parameters('signalrName')]",
                            "type": "String"
                        },
                        "rest-authentication": {
                            "defaultValue": "[parameters('rest-authentication')]",
                            "type": "Object"
                        },
                        "scaleInterval": {
                            "defaultValue": "[parameters('scaleInterval')]",
                            "type": "Int"
                        },
                        "subscriptionId": {
                            "defaultValue": "[subscription().subscriptionId]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "[concat('Trigger every ', parameters('scaleInterval'), ' minutes')]": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": "[parameters('scaleInterval')]"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "CalculateUnits": {
                            "inputs": {
                                "bufferedConnections": "@add(max(1000,variables('currentConnections')),variables('buffer'))",
                                "currentConnections": "@variables('currentConnections')",
                                "expectedUnits": "@int(split(string(min(div(add(variables('currentConnections'),add(variables('buffer'),1000)),1000), variables('maxUnits'))),'.')[0])"
                            },
                            "runAfter": {
                                "ForEachConnectionCount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "CreateOrUpdateSignalR_Body": {
                            "inputs": {
                                "location": "@parameters('location')",
                                "sku": {
                                    "capacity": "@variables('finalUnits')",
                                    "name": "Standard_S1"
                                }
                            },
                            "runAfter": {
                                "Variable:_finalUnits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Filter_array": {
                            "inputs": {
                                "from": "@body('GetSignalRMetrics')?['value']?[0]?['timeseries']?[0]?['data']",
                                "where": "@greaterOrEquals(formatDateTime(item()?['timeStamp']), getPastTime(parameters('scaleInterval'), 'Minute'))"
                            },
                            "runAfter": {
                                "GetSignalRMetrics": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "ForEachConnectionCount": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Set_variable_2": {
                                            "inputs": {
                                                "name": "currentConnections",
                                                "value": "@items('ForEachConnectionCount')?['maximum']"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@variables('currentConnections')",
                                                    "@items('ForEachConnectionCount')?['maximum']"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@body('Filter_array')",
                            "runAfter": {
                                "Filter_array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "GetSignalR": {
                            "inputs": {
                                "authentication": "@parameters('rest-authentication')",
                                "method": "GET",
                                "uri": "https://management.azure.com/subscriptions/@{parameters('subscriptionId')}/resourceGroups/@{parameters('resourceGroup')}/providers/Microsoft.SignalRService/signalR/@{parameters('signalrName')}?api-version=2018-10-01"
                            },
                            "runAfter": {
                                "CalculateUnits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "GetSignalRMetrics": {
                            "inputs": {
                                "authentication": "@parameters('rest-authentication')",
                                "method": "GET",
                                "uri": "https://management.azure.com/subscriptions/@{parameters('subscriptionId')}/resourceGroups/@{parameters('resourceGroup')}/providers/Microsoft.SignalRService/SignalR/@{parameters('signalrName')}/providers/microsoft.insights/metrics?api-version=2018-01-01"
                            },
                            "runAfter": {
                                "Variable:_currentUnits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "If_expected_!=_current": {
                            "actions": {
                                "CreateOrUpdateSignalR": {
                                    "inputs": {
                                        "authentication": "@parameters('rest-authentication')",
                                        "body": "@outputs('CreateOrUpdateSignalR_Body')",
                                        "method": "PUT",
                                        "uri": "https://management.azure.com/subscriptions/@{parameters('subscriptionId')}/resourceGroups/@{parameters('resourceGroup')}/providers/Microsoft.SignalRService/signalR/@{parameters('signalrName')}?api-version=2018-10-01"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@variables('finalUnits')",
                                                "@variables('currentUnits')"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "runAfter": {
                                "CreateOrUpdateSignalR_Body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Remove_smaller_supportedUnits": {
                            "inputs": {
                                "from": "@variables('supportedUnits')",
                                "where": "@greaterOrEquals(item(), outputs('CalculateUnits')['expectedUnits'])"
                            },
                            "runAfter": {
                                "Variable:_supportedUnits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query"
                        },
                        "Set_currentUnits": {
                            "inputs": {
                                "name": "currentUnits",
                                "value": "@body('GetSignalR')?['sku']?['capacity']"
                            },
                            "runAfter": {
                                "GetSignalR": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable"
                        },
                        "Variable:_buffer": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "buffer",
                                        "type": "Integer",
                                        "value": 50
                                    }
                                ]
                            },
                            "runAfter": {
                                "Variable:_currentConnections": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Variable:_currentConnections": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "currentConnections",
                                        "type": "Float",
                                        "value": 0
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Variable:_currentUnits": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "currentUnits",
                                        "type": "Integer",
                                        "value": 0
                                    }
                                ]
                            },
                            "runAfter": {
                                "Variable:_maxUnits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Variable:_finalUnits": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "finalUnits",
                                        "type": "Integer",
                                        "value": "@first(body('Remove_smaller_supportedUnits'))"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Remove_smaller_supportedUnits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Variable:_maxUnits": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "maxUnits",
                                        "type": "Integer",
                                        "value": 5
                                    }
                                ]
                            },
                            "runAfter": {
                                "Variable:_buffer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Variable:_supportedUnits": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "supportedUnits",
                                        "type": "Array",
                                        "value": [
                                            1,
                                            2,
                                            5,
                                            10,
                                            20,
                                            50,
                                            100
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Set_currentUnits": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        }
    ]
}